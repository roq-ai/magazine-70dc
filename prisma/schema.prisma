generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model article {
  id                           String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title                        String        @db.VarChar(255)
  content                      String
  category_id                  String        @db.Uuid
  author_id                    String        @db.Uuid
  editor_id                    String?       @db.Uuid
  status                       String        @db.VarChar(50)
  created_at                   DateTime      @default(now()) @db.Timestamp(6)
  updated_at                   DateTime      @default(now()) @db.Timestamp(6)
  user_article_author_idTouser user          @relation("article_author_idTouser", fields: [author_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  category                     category      @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_article_editor_idTouser user?         @relation("article_editor_idTouser", fields: [editor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  translation                  translation[]
}

model category {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String    @db.VarChar(255)
  publisher_id String    @db.Uuid
  created_at   DateTime  @default(now()) @db.Timestamp(6)
  updated_at   DateTime  @default(now()) @db.Timestamp(6)
  article      article[]
  publisher    publisher @relation(fields: [publisher_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model overview_page {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title        String    @db.VarChar(255)
  description  String?   @db.VarChar(255)
  publisher_id String    @db.Uuid
  created_at   DateTime  @default(now()) @db.Timestamp(6)
  updated_at   DateTime  @default(now()) @db.Timestamp(6)
  publisher    publisher @relation(fields: [publisher_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model publisher {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description   String?         @db.VarChar(255)
  image         String?         @db.VarChar(255)
  name          String          @db.VarChar(255)
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @db.Timestamp(6)
  user_id       String          @db.Uuid
  tenant_id     String          @db.VarChar(255)
  category      category[]
  overview_page overview_page[]
  user          user            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model translation {
  id                 String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  language           String   @db.VarChar(50)
  translated_title   String   @db.VarChar(255)
  translated_content String
  article_id         String   @db.Uuid
  translator_id      String   @db.Uuid
  created_at         DateTime @default(now()) @db.Timestamp(6)
  updated_at         DateTime @default(now()) @db.Timestamp(6)
  article            article  @relation(fields: [article_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user               user     @relation(fields: [translator_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                           String        @unique @db.VarChar(255)
  firstName                       String?       @db.VarChar(255)
  lastName                        String?       @db.VarChar(255)
  roq_user_id                     String        @db.VarChar(255)
  tenant_id                       String        @db.VarChar(255)
  created_at                      DateTime      @default(now()) @db.Timestamp(6)
  updated_at                      DateTime      @default(now()) @db.Timestamp(6)
  article_article_author_idTouser article[]     @relation("article_author_idTouser")
  article_article_editor_idTouser article[]     @relation("article_editor_idTouser")
  publisher                       publisher[]
  translation                     translation[]
}
